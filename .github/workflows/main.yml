name: Build DbusSmsForwardCPlus for AW1000 (ipq807x / aarch64_cortex-a53)

on:
  workflow_dispatch:
  push:
    branches: [ master, main ]
  pull_request:

permissions:
  contents: read

env:
  SDK_URL: https://archive.openwrt.org/releases/24.10.1/targets/qualcommax/ipq807x/openwrt-sdk-24.10.1-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst
  PACKAGE_NAME: DbusSmsForwardCPlus
  TARGET: qualcommax/ipq807x
  ARCH: aarch64_cortex-a53
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build prerequisites
        run: |
          sudo apt-get update
          # zstd 为 .tar.zst 解包必需；其余为常见 SDK 构建所需
          sudo apt-get install -y --no-install-recommends \
            build-essential gawk libncurses5-dev libssl-dev \
            unzip rsync file wget curl ca-certificates \
            python3 xz-utils zstd

      - name: Download and extract OpenWrt SDK (24.10.1 ipq807x)
        run: |
          set -euxo pipefail
          mkdir -p "$GITHUB_WORKSPACE/sdk"
          cd "$GITHUB_WORKSPACE/sdk"
          curl -L --retry 3 --fail -o sdk.tar.zst "$SDK_URL"
          # 解包 .tar.zst
          tar -I zstd -xf sdk.tar.zst
          SDK_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*" | head -n1)
          echo "SDK_DIR=$GITHUB_WORKSPACE/sdk/${SDK_DIR#./}" >> "$GITHUB_ENV"

      - name: Prepare feeds (packages/luci/routing/telephony etc.)
        working-directory: ${{ env.SDK_DIR }}
        run: |
          set -euxo pipefail
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Import package into SDK
        run: |
          set -euxo pipefail
          # 清理并拷贝当前仓库（去掉 .git/.github 等），作为 SDK 内的本地包
          rm -rf "${{ env.SDK_DIR }}/package/${{ env.PACKAGE_NAME }}"
          mkdir -p "${{ env.SDK_DIR }}/package/${{ env.PACKAGE_NAME }}"
          rsync -a --delete \
            --exclude '.git*' --exclude '.github' --exclude 'sdk' \
            ./ "${{ env.SDK_DIR }}/package/${{ env.PACKAGE_NAME }}/"

      - name: Build package
        working-directory: ${{ env.SDK_DIR }}
        env:
          FORCE_UNSAFE_CONFIGURE: "1"
        run: |
          set -euxo pipefail
          # 确保 host 工具在 PATH 中（SDK 的 make 会自行处理，但手动加更稳妥）
          export PATH="${PWD}/staging_dir/host/bin:${PATH}"
          # 生成最小配置，避免 SDK 偶发状态问题
          make defconfig
          # 仅编译本包（OpenWrt 会自动先构建所需依赖库的 -dev 头文件到 staging）
          make -j"$(nproc)" V=sc package/${{ env.PACKAGE_NAME }}/compile

      - name: Collect ipk artifacts
        working-directory: ${{ env.SDK_DIR }}
        run: |
          set -euxo pipefail
          mkdir -p "$GITHUB_WORKSPACE/output"
          # 找出目标 ipk 并拷贝到 output/
          find bin -type f -name "${{ env.PACKAGE_NAME }}_*.ipk" -exec cp -v {} "$GITHUB_WORKSPACE/output/" \;
          # 备份一下构建日志以便排查（可选）
          if [ -f build_dir/target-*/${{ env.PACKAGE_NAME }}*/.built ]; then
            :
          fi
          ls -l "$GITHUB_WORKSPACE/output" || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-ipq807x-${{ env.ARCH }}
          path: output/
          retention-days: 14
